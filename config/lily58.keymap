/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define MEDIA 1
#define NAV 2
#define MOUSE 3
#define SYM 4
#define NUM 5
#define FUN 6

&lt {
    flavor = "balanced";
    quick_tap_ms = <100>;
    tapping-term-ms = <200>;
    retro-tap;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer = {
  &none &none       &none      &none       &none         &none     /*&             &*/           &none         &none       &none       &none      &none          &none
  &none &kp Q       &kp W      &kp E       &kp R         &kp T     /*&             &*/           &kp Y         &kp U       &kp I       &kp O      &kp P          &none
  &none &mt LMETA A &mt LALT S &mt LCTRL D &mt LSHFT F   &kp G     /*&             &*/           &kp M         &mt LSHFT J &mt LCTRL K &mt LALT L &mt LMETA SEMI &none
  &none &kp Z       &kp X      &kp C       &kp V         &kp B       &none         &none         &kp N         &kp M       &kp COMMA   &kp DOT    &kp FSLH       &none
/*&     &           &*/        &none       &lt MEDIA ESC &lt NAV TAB &lt MOUSE RET &lt SYM SPACE &lt NUM BSPC  &mo FUN     &none     /*&          &              &*/
        }

//         default_layer {
//             bindings = <
// // &kp GRAVE     &kp N1 &kp N2 &kp N3    &kp N4   &kp N5                                 &kp N6   &kp N7 &kp N8    &kp N9  &kp N0   &kp EQUAL
// &none         &none  &none  &none     &none    &none                                  &none    &none    &none     &none   &none    &none
// &kp TAB       &kp Q  &kp W  &kp E     &kp R    &kp T                                  &kp Y    &kp U    &kp I     &kp O   &kp P    &kp MINUS
// &mt LCTRL ESC &kp A  &kp S  &kp D     &kp F    &kp G                                  &kp H    &kp J    &kp K     &kp L   &kp SEMI &kp SQT
// &kp LSHFT     &kp Z  &kp X  &kp C     &kp V    &kp B    &kp LBKT      &kp RBKT        &kp N    &kp M    &kp COMMA &kp DOT &kp FSLH &kp RSHFT
//                             &kp PSCRN &kp LGUI &kp LALT &lt LOWER RET &lt RAISE SPACE &kp BSPC &mo META &kp DEL
//             >;
//         };

//         lower_layer {
//             bindings = <
// // &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4               &out OUT_USB &out OUT_BLE &none  &none  &none     &none
// &none      &none        &none        &none        &none        &none                      &none        &none        &none  &none  &none     &none
// &kp GRAVE  &kp EXCL     &kp AT       &kp HASH     &kp DOLLAR   &kp PRCNT                  &kp ASTERISK &kp N7       &kp N8 &kp N9 &kp MINUS &none
// &kp CARET  &kp AMPS     &kp ASTERISK &kp LPAR     &kp RPAR     &kp TILDE                  &kp SLASH    &kp N4       &kp N5 &kp N6 &kp PLUS  &none
// &none      &kp EQUAL    &kp PLUS     &kp MINUS    &kp UNDER    &kp BSLH     &none  &none  &none        &kp N1       &kp N2 &kp N3 &kp DOT   &none
//                                      &trans       &trans       &trans       &trans &trans &trans       &kp N0       &trans
//             >;
//         };

//         raise_layer {
//             bindings = <
// &none  &none  &none &none     &none   &none                    &none    &none     &none     &none     &none   &none
// &trans &kp F1 &kp F2  &kp F3  &kp F4  &kp C_PP                 &kp HOME &kp PG_DN &kp PG_UP &kp END   &none   &none
// &trans &kp F5 &kp F6  &kp F7  &kp F8  &kp C_VOL_UP             &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &none   &none
// &trans &kp F9 &kp F10 &kp F11 &kp F12 &kp C_VOL_DN &none &none &none    &none     &none     &none     &none   &none
//                       &none   &none   &trans       &none &none &none    &none     &none
//             >;
//         };
//     };
};
